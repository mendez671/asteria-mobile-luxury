# ===============================
# PHASE 4: FIREBASE ENVIRONMENT TEMPLATE
# Copy to .env.local and fill in your Firebase credentials
# ===============================

# Existing OpenAI and service variables
OPENAI_API_KEY=your_openai_api_key_here
SLACK_WEBHOOK_URL=your_slack_webhook_url_here
TAVILY_API_KEY=your_tavily_api_key_here

# Twilio Configuration
TWILIO_ACCOUNT_SID=your_twilio_account_sid_here
TWILIO_AUTH_TOKEN=your_twilio_auth_token_here
TWILIO_PHONE_NUMBER=your_twilio_phone_number_here

# ===============================
# FIREBASE CONFIGURATION (Client-side)
# Get these from Firebase Console > Project Settings > General
# ===============================

NEXT_PUBLIC_FIREBASE_API_KEY=your_firebase_api_key_here
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your-project.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=your-project-id
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your-project.appspot.com
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=123456789012
NEXT_PUBLIC_FIREBASE_APP_ID=1:123456789012:web:abcdef123456
NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=G-ABCDEFGHIJ

# ===============================
# FIREBASE ADMIN SDK (Server-side)
# Get these from Firebase Console > Project Settings > Service Accounts
# Generate new private key and copy the values
# ===============================

FIREBASE_PROJECT_ID=your-project-id
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your-project.iam.gserviceaccount.com
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC...\n-----END PRIVATE KEY-----\n"

# ===============================
# FIREBASE SETUP INSTRUCTIONS
# ===============================

# 1. Go to Firebase Console: https://console.firebase.google.com/
# 2. Create a new project or select existing project
# 3. Enable Authentication with Email/Password provider
# 4. Enable Firestore Database
# 5. Go to Project Settings > General tab
#    - Copy Web App config values to NEXT_PUBLIC_* variables above
# 6. Go to Project Settings > Service Accounts tab
#    - Generate new private key
#    - Copy the JSON values to FIREBASE_* variables above
# 7. Set up Firestore Security Rules (see firebase-rules.txt)
# 8. Optional: Set up Firebase Emulators for development

# ===============================
# FIRESTORE COLLECTIONS STRUCTURE
# ===============================

# /members/{uid}
#   - uid: string
#   - email: string  
#   - displayName: string
#   - tier: 'elite' | 'premium' | 'standard'
#   - memberSince: timestamp
#   - preferences: object
#   - serviceHistory: array
#   - contactMethods: array
#   - lastActive: timestamp
#   - totalServices: number
#   - satisfactionScore: number
#   - tagMemberId: string (optional)
#   - billingAddress: object (optional)
#   - emergencyContact: object (optional)
#   - conciergeNotes: array (optional)

# /members/{uid}/interactions/{interactionId}
#   - timestamp: timestamp
#   - serviceType: string
#   - details: object
#   - sessionId: string

# ===============================
# NEXT STEPS AFTER SETUP
# ===============================

# 1. Copy this file to .env.local
# 2. Fill in all the Firebase credentials
# 3. Run: npm run build (to test Firebase integration)
# 4. Optional: Create test Firebase users
# 5. Optional: Set up Firebase Emulators for development 